name: Run Terraform AWS

on:
  push:
    branches: [ "master", "main" ]

env:
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  AWS_REGION: eu-central-1                    # set this to your preferred AWS region, e.g. us-west-1
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      # Default AWS credentials configuration for eu-central-1 region
      - name: Configure AWS credentials for eu-central-1
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR Public (does not require region specification)
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
        env:
          AWS_REGION: 'us-east-1'           # Unsetting AWS_REGION for this step
          AWS_DEFAULT_REGION: 'us-east-1'   # Unsetting AWS_DEFAULT_REGION for this step

      # Build, tag, and push docker image to Amazon ECR Public
      - name: Build, tag, and push docker image to Amazon ECR Public
        id: build-and-push
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          IMAGE_URI=public.ecr.aws/r6m3r1y7/fundagold_repository:${IMAGE_TAG}
  
          docker build --build-arg BOT_TOKEN=${{ secrets.BOT_TOKEN }} -t ${IMAGE_URI} .
          docker push ${IMAGE_URI}
          echo "::set-output name=image_uri::${IMAGE_URI}"
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.6
        
      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: tf-plan
        run: terraform plan -out=tfplan -input=false
        env:
          TF_VAR_aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_image_uri: ${{ steps.build-and-push.outputs.image_uri }}
          
      - name: Terraform Apply
        if: ${{ steps.tf-plan.outputs.exit-code == 2 }}  # Apply only if there are changes
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_image_uri: ${{ steps.build-and-push.outputs.image_uri }}
